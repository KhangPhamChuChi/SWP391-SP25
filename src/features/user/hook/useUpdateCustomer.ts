import { useMutation, useQueryClient } from "@tanstack/react-query";
import axios from "axios";
import { CustomerDto } from "../dto/customer.dto";

// üõ† Hook c·∫≠p nh·∫≠t kh√°ch h√†ng
export const useUpdateCustomer = () => {
  const queryClient = useQueryClient();

  return useMutation({
    mutationFn: async (customer: CustomerDto): Promise<CustomerDto> => {
      if (!customer || !customer.customerId) {
        throw new Error("‚ö† Thi·∫øu th√¥ng tin kh√°ch h√†ng");
      }

      console.log("üì° G·ª≠i y√™u c·∫ßu c·∫≠p nh·∫≠t kh√°ch h√†ng:", customer);

      try {
        const response = await axios.put<CustomerDto>(
          `https://localhost:7071/updateCustomer/${customer.customerId}`,
          customer,
          { headers: { "Content-Type": "application/json" } }
        );

        console.log("‚úÖ C·∫≠p nh·∫≠t th√†nh c√¥ng:", response.data);
        return response.data;
      } catch (error) {
        console.error("‚ùå L·ªói khi c·∫≠p nh·∫≠t kh√°ch h√†ng:", error);
        throw error;
      }
    },
    onSuccess: (data) => {
      console.log(
        "üîÑ Invalidate d·ªØ li·ªáu kh√°ch h√†ng sau khi c·∫≠p nh·∫≠t:",
        data.customerId
      );

      // ‚úÖ C√°ch g·ªçi invalidateQueries ƒë√∫ng
      queryClient.invalidateQueries({
        queryKey: ["getCustomerById", data.customerId],
      });
    },
    onError: (error) => {
      console.error("‚ö† L·ªói khi c·∫≠p nh·∫≠t:", error);
    },
  });
};
